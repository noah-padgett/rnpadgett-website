?apply
library(sampling)
Y_obs <- strata(popdata, G, 20, "srswor")
Y_obs <- cluster(popdata, G, 20, "srswor")
Y_obs <- cluster(popdata, "G", 20, "srswor")
Y <- N_obs
Y <- N_obs
n <- 20
i <- 1; j <- 1
for(g in 1:G){
for(j in 1:n){
Y[i] <- rnorm(1, G_mean[g], sigma)
i <- i + 1
}
}
c1 <- cluster(popdata, "G", 5)
c1 <- cluster(popdata, "G", 5, "srswor")
data(swissmunicipalities)
# the variable 'REG' has 7 categories in the population
# it is used as clustering variable
# the sample size is 3; the method is simple random sampling without replacement
cl=cluster(swissmunicipalities,clustername=c("REG"),size=3,method="srswor")
# extracts the observed data
# the order of the columns is different from the order in the initial database
getdata(swissmunicipalities, cl)
# extracts the observed data
# the order of the columns is different from the order in the initial database
dat <- getdata(swissmunicipalities, cl)
View(cl)
# the variable 'REG' has 7 categories in the population
# it is used as clustering variable
# the sample size is 3; the method is simple random sampling without replacement
cl=cluster(swissmunicipalities,clustername=c("REG"),
size=10,method="srswor")
?by
Y <- N_obs
n <- 20
popdata$G <- factor(popdata$G)
c <- by(popdata, popdata$G, sample, size=n)
c <- by(popdata[,1], popdata[,2], sample, size=n)
View(c)
c <- tapply(popdata[,1], popdata[,2], sample, size=n)
c <- c(tapply(popdata[,1], popdata[,2], sample, size=n))
c <- unlist(tapply(popdata[,1], popdata[,2], sample, size=n))
Y_obs <- unlist(tapply(popdata[,1], popdata[,2], sample, size=n))
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
for(i in 1:nsim){
yi <- unlist(tapply(popdata[,1], popdata[,2], sample, size=20))
sim.mean[i] <- mean(yi)
sim.sd[i] <- sd(yi)
sim.ll[i] <- sim.mean[i] - 1.96*sim.sd[i]/sqrt(N_obs)
sim.ul[i] <- sim.mean[i] + 1.96*sim.sd[i]/sqrt(N_obs)
sim.cov[i] <- (sim.ll[i] < mu) & (sim.ul[i] > mu)
}
# coverage
mean(sim.cov)
# Average Width
mean(sim.ul - sim.ll)
sim <- data.frame(M = sim.mean, SD=sim.sd, LL=sim.ll, UL=sim.ul)
cols=c("MEAN"="#CC79A7","LL 2.5%"="#E69F00", "UL 97.5%"="#56B4E9")
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
scale_color_manual(name=NULL,values=cols)+
theme_bw()
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
scale_color_manual(name=NULL,values=cols)+
lims(y=c(45,55))+
theme_bw()
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
for(i in 1:nsim){
yi <- sample(x=popdata$Y, size=N_obs, prob=popdata$pi_srs)
sim.mean[i] <- mean(yi)
sim.sd[i] <- sd(yi)
sim.ll[i] <- sim.mean[i] - 1.96*sim.sd[i]/sqrt(N_obs)
sim.ul[i] <- sim.mean[i] + 1.96*sim.sd[i]/sqrt(N_obs)
sim.cov[i] <- (sim.ll[i] < mu) & (sim.ul[i] > mu)
}
# coverage
mean(sim.cov)
# Average Width
mean(sim.ul - sim.ll)
sim <- data.frame(M = sim.mean, SD=sim.sd, LL=sim.ll, UL=sim.ul)
library(ggplot2)
cols=c("MEAN"="#CC79A7","LL 2.5%"="#E69F00", "UL 97.5%"="#56B4E9")
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
scale_color_manual(name=NULL,values=cols)+
lims(y=c(45,55))+
theme_bw()
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
for(i in 1:nsim){
yi <- unlist(tapply(popdata[,1], popdata[,2], sample, size=20))
sim.mean[i] <- mean(yi)
sim.sd[i] <- sd(yi)
sim.ll[i] <- sim.mean[i] - 1.96*sim.sd[i]/sqrt(N_obs)
sim.ul[i] <- sim.mean[i] + 1.96*sim.sd[i]/sqrt(N_obs)
sim.cov[i] <- (sim.ll[i] < mu) & (sim.ul[i] > mu)
}
# coverage
mean(sim.cov)
# Average Width
mean(sim.ul - sim.ll)
sim <- data.frame(M = sim.mean, SD=sim.sd, LL=sim.ll, UL=sim.ul)
cols=c("MEAN"="#CC79A7","LL 2.5%"="#E69F00", "UL 97.5%"="#56B4E9")
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
scale_color_manual(name=NULL,values=cols)+
lims(y=c(45,55))+
theme_bw()
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
geom_point(aes(x=0,y=50), color="red")+
scale_color_manual(name=NULL,values=cols)+
lims(y=c(45,55))+
theme_bw()
mean(sim.cov)
1/4000
1/3000
model <- '
model <- '
data {
int n;
real Y[n];
}
parameter {
real mu;
}
model {
//data model
Y ~ normal(mu, 10);
//prior
mu ~ normal(50,20);
}
'
model <- '
data {
int n;
real Y[n];
}
parameter {
real mu;
}
model {
//data model
Y ~ normal(mu, 10);
//prior
mu ~ normal(50,20);
}
'
library(rstan)
model <- '
library(rstan)
model <- '
data {
int n;
real Y[n];
}
parameters {
real mu;
}
model {
//data model
Y ~ normal(mu, 10);
//prior
mu ~ normal(50,20);
}
'
yi <- sample(x=popdata$Y, size=N_obs, prob=popdata$pi_srs)
dati <- list(n=length(yi), Y=yi)
fit <- sampling(model,
data = dati
chains = 1, iter = 5000, refresh = 0)
fit <- sampling(model,
data = dati,
chains = 1, iter = 5000, refresh = 0)
?stan
fit <- stan(model, data = dati,
chains = 1, iter = 5000)
fit <- stan(model_name=model, data = dati,
chains = 1, iter = 5000)
library(rstan)
model <- "
data {
int n;
real Y[n];
}
parameters {
real mu;
}
model {
//data model
Y ~ normal(mu, 10);
//prior
mu ~ normal(50,20);
}
"
dati
library(rstan)
model <- "
data {
int n;
real Y[n];
}
parameters {
real mu;
}
model {
//data model
Y ~ normal(mu, 10);
//prior
mu ~ normal(50,20);
}
"
fit <- stan(model_name=model, data = dati,
chains = 1, iter = 5000)
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 5000)
print(fit)
fit$mu
summary(fit)
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
for(i in 1:nsim){
yi <- sample(x=popdata$Y, size=N_obs, prob=popdata$pi_srs)
dati <- list(n=length(yi), Y=yi)
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 5000, verbose=F)
mu_ss <- extract(fit)$mu
sim.mean[i] <- mean(mu_ss)
sim.sd[i] <- sd(mu_ss)
sim.ll[i] <- quantile(mu_ss, 0.025)
sim.ul[i] <- quantile(mu_ss, 0.975)
sim.cov[i] <- (sim.ll[i] < mu) & (sim.ul[i] > mu)
}
# coverage
mean(sim.cov)
# Average Width
mean(sim.ul - sim.ll)
sim <- data.frame(M = sim.mean, SD=sim.sd, LL=sim.ll, UL=sim.ul)
library(ggplot2)
cols=c("MEAN"="#CC79A7","LL 2.5%"="#E69F00", "UL 97.5%"="#56B4E9")
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
geom_point(aes(x=0,y=50), color="red",size=2)+
scale_color_manual(name=NULL,values=cols)+
lims(y=c(45,55))+
theme_bw()
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
for(i in 1:nsim){
yi <- sample(x=popdata$Y, size=N_obs, prob=popdata$pi_srs)
dati <- list(n=length(yi), Y=yi)
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 5000, verbose=F, include=F)
mu_ss <- extract(fit)$mu
sim.mean[i] <- mean(mu_ss)
sim.sd[i] <- sd(mu_ss)
sim.ll[i] <- quantile(mu_ss, 0.025)
sim.ul[i] <- quantile(mu_ss, 0.975)
sim.cov[i] <- (sim.ll[i] < mu) & (sim.ul[i] > mu)
}
# coverage
mean(sim.cov)
# Average Width
mean(sim.ul - sim.ll)
sim <- data.frame(M = sim.mean, SD=sim.sd, LL=sim.ll, UL=sim.ul)
library(ggplot2)
cols=c("MEAN"="#CC79A7","LL 2.5%"="#E69F00", "UL 97.5%"="#56B4E9")
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
geom_point(aes(x=0,y=50), color="red",size=2)+
scale_color_manual(name=NULL,values=cols)+
lims(y=c(45,55))+
theme_bw()
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
for(i in 1:nsim){
yi <- sample(x=popdata$Y, size=N_obs, prob=popdata$pi_srs)
dati <- list(n=length(yi), Y=yi)
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 5000, refresh=0)
mu_ss <- extract(fit)$mu
sim.mean[i] <- mean(mu_ss)
sim.sd[i] <- sd(mu_ss)
sim.ll[i] <- quantile(mu_ss, 0.025)
sim.ul[i] <- quantile(mu_ss, 0.975)
sim.cov[i] <- (sim.ll[i] < mu) & (sim.ul[i] > mu)
}
# coverage
mean(sim.cov)
# Average Width
mean(sim.ul - sim.ll)
sim <- data.frame(M = sim.mean, SD=sim.sd, LL=sim.ll, UL=sim.ul)
library(ggplot2)
cols=c("MEAN"="#CC79A7","LL 2.5%"="#E69F00", "UL 97.5%"="#56B4E9")
ggplot()+
geom_boxplot(data=sim, aes(y=M, color="MEAN"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=LL, color="LL 2.5%"),
coef=0, outlier.shape=NA)+
geom_boxplot(data=sim, aes(y=UL, color="UL 97.5%"),
coef=0, outlier.shape=NA)+
geom_point(aes(x=0,y=50), color="red",size=2)+
scale_color_manual(name=NULL,values=cols)+
lims(y=c(45,55))+
theme_bw()
yi <- unlist(tapply(popdata[,1], popdata[,2], sample, size=20))
yi
?tapply
yi <- tapply(popdata[,1], popdata[,2], sample, size=20, simplify = T)
View(yi)
yi <- tapply(popdata[,1], popdata[,2], sample, size=20, simplify = F)
g <- rep(1:5, 20)
sort(g)
?replace
model <- "
data {
int n;
int G;
real Y[n];
real pi[n];
}
parameters {
real mu;
}
model {
//data model
Y ~ inv(pi)*normal(mu, 10);
//prior
mu ~ normal(50,20);
}
"
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
pi <- c(0.00025,0.0003,0.001,0.001,0.001)
sort(rep(pi, 20))
model <- "
data {
int n;
real Y[n];
real pi[n];
}
parameters {
real mu;
}
model {
//data model
Y ~ inv(pi)*normal(mu, 10);
//prior
mu ~ normal(50,20);
}
"
nsim <- 1000
sim.mean <- numeric(nsim)
sim.sd <- numeric(nsim)
sim.ll <- numeric(nsim)
sim.ul <- numeric(nsim)
sim.cov <- numeric(nsim)
i <- 1
for(i in 1:nsim){
yi <- unlist(tapply(popdata[,1], popdata[,2], sample, size=20))
pi <- c(0.00025,0.0003,0.001,0.001,0.001)
dati <- list(n=length(yi), Y=yi, pi=sort(rep(pi, 20)))
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 1000, refresh=0)
mu_ss <- extract(fit)$mu
sim.mean[i] <- mean(mu_ss)
sim.sd[i] <- sd(mu_ss)
sim.ll[i] <- quantile(mu_ss, 0.025)
sim.ul[i] <- quantile(mu_ss, 0.975)
sim.cov[i] <- (sim.ll[i] < mu) & (sim.ul[i] > mu)
}
model <- "
data {
int n;
real Y[n];
real pi[n];
}
parameters {
real mu;
}
model {
//data model
Y += inv(pi)*normal(mu, 10);
//prior
mu ~ normal(50,20);
}
"
yi <- unlist(tapply(popdata[,1], popdata[,2], sample, size=20))
pi <- c(0.00025,0.0003,0.001,0.001,0.001)
dati <- list(n=length(yi), Y=yi, pi=sort(rep(pi, 20)))
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 1000, refresh=0)
model <- "
data {
int n;
real Y[n];
real pi[n];
}
parameters {
real mu;
}
model {
//data model
for(i in 1:n){
Y[i] += inv(pi[i])*normal_lpdf(Y[i]| mu, 10);
}
//prior
mu ~ normal(50,20);
}
"
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 1000, refresh=0)
model <- "
data {
int n;
real Y[n];
real pi[n];
}
parameters {
real mu;
}
model {
//data model
for(i in 1:n){
target += inv(pi[i])*normal_lpdf(Y[i]| mu, 10);
}
//prior
mu ~ normal(50,20);
}
"
fit <- stan(model_code=model, data = dati,
chains = 1, iter = 1000, refresh=0)
mu_ss <- extract(fit)$mu
mean(mu_ss)
G_mean
build_site()
build_site()
